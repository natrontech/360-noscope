apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: eck-stack
spec:
  maxHistory: 5
  interval: 5m0s
  chart:
    spec:
      chart: eck-stack
      version: 0.7.0
      sourceRef:
        kind: HelmRepository
        name: elastic-charts
        namespace: flux-public
      interval: 60m0s
  install:
    remediation:
      # unlimited retries on helm install
      retries: -1
      # do not cleanup if helm install fails
      remediateLastFailure: false
  upgrade:
    remediation:
      # try helm upgrade 2 times
      retries: 2
      # if helm upgrade fails, rollback to last successfull release
      remediateLastFailure: true
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              group: elasticsearch.k8s.elastic.co
              name: elasticsearch
            patch:
              - op: replace
                path: /metadata/annotations/eck.k8s.elastic.co~1license
                value: basic
          - target:
              group: kibana.k8s.elastic.co
              name: kibana
            patch:
              - op: replace
                path: /metadata/annotations/eck.k8s.elastic.co~1license
                value: basic
  values:
    ## Values: https://github.com/elastic/cloud-on-k8s/blob/main/deploy/eck-stack/values.yaml
    eck-elasticsearch:
      version: 8.9.1
      # delete pvc only if cluster is scaled, not deleted
      volumeClaimDeletePolicy: "DeleteOnScaledownOnly"
      http:
        tls:
          selfSignedCertificate:
            disabled: true
      nodeSets:
      - name: default
        count: 3
        config:
          node.store.allow_mmap: false
        podTemplate:
          spec:
            containers:
            - name: elasticsearch
              resources:
                limits:
                  #cpu: 1
                  memory: 2Gi
                requests:
                  #cpu: 0.5
                  memory: 2Gi
        volumeClaimTemplates:
          - metadata:
              name: elasticsearch-data
            spec:
              accessModes: ["ReadWriteOnce"]
              resources: 
                requests:
                  storage: 100Gi
              storageClassName: nfs-data

    eck-kibana:
      fullnameOverride: "kibana"
      version: 8.9.1
      spec:
        count: 2
        http:
          tls:
            selfSignedCertificate:
              disabled: true
        podTemplate:
          spec:
            containers:
            - name: kibana
              resources:
                limits:
                  #cpu: 1
                  memory: 1Gi
                requests:
                  #cpu: 0.5
                  memory: 1Gi
